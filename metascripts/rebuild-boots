#!/bin/sh
# Rebuilds boot images

ARTIFACTS_DIR=${DEBIMG_ARTIFACTS_DIR:-/tmp/debimg/artifacts}
CACHE_DIR=${DEBIMG_CACHE_DIR:-/tmp/debimg/cache}
LOG_DIR=${DEBIMG_LOG_DIR:-/tmp/debimg/log}

docker build -t debimg .

mkdir -p /tmp/debimg/artifacts || exit
mkdir -p /tmp/debimg/cache || exit
mkdir -p /tmp/debimg/log || exit

D=$(mktemp -d -p "${LOG_DIR}" rebuild-boots-XXXXXX)

IFS=,
grep -vE "^#|^\s*$" boards.csv | tail -n +2 | while read BOARD_ID MODEL MAKE CHIP_ID DEFCONFIG TUPLE TYPE DTB _
do
    docker run --rm \
               -v "${ARTIFACTS_DIR}":/artifacts \
               -v "${CACHE_DIR}":/mnt/cache:ro \
               -e U_BOOT_TARBALL=/mnt/cache/u-boot-latest.tar.bz2 \
               debimg \
               build-boot "${BOARD_ID}" "${CHIP_ID}" "${DEFCONFIG}" "${TUPLE}" \
               >"${D}"/"log-${BOARD_ID}.txt" 2>&1 &&
    rm "${D}"/"log-${BOARD_ID}.txt"
done
unset IFS
